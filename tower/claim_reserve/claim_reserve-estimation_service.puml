@startuml Reserve Estimation Service

!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml
!include style/sprites.puml
!include style/brand.puml

'Style
LAYOUT_AS_SKETCH()
LAYOUT_LANDSCAPE()

Person_Ext(p_t_customer, "Customer", "Any customer interacting with customer services", $sprite="user")
Person(p_claims_consultant, "Claims Consultant", "Performs administrative functions within the IVR solution", $sprite="user")
System(sys_mytower, "My Tower", "Provides customers the ability to digitally interact with Tower services.", $sprite="web_asset")
System(sys_eis, "EIS", "Tower core insurance system with Policy, Claim and Billing management functionality.", $sprite="blur_on")
System(sys_integration, "Integration Services", "Provides Integration services for Towers systems.", $sprite="microsoft")
System(sys_resesti_svc, "Claim Reserve Estimation Service", "Provides the calulation to define the claim reserve.", $sprite="calculator*.75", $tags="new")
System(sys_data_services, "Data Services", "Provides Integration services for Towers systems.", $sprite="snowflake")
System(sys_claim_api, "Claim API", "Service that provides business logic for the domain defined by the API", $tags="new")
System(sys_policy_api, "Policy API", "Service that provides business logic for the domain defined by the API", $sprite="kotlin*.5", $tags="new")

Rel(p_t_customer, sys_mytower, "Manages claims using", "Visits pages")
Rel(p_t_customer, p_claims_consultant, "Submits claims using", "PSTN")
Rel(sys_mytower, sys_eis, "Makes API calls to submit claim", "JSON/HTTP")
Rel(p_claims_consultant, sys_eis, "Manages claims using", "Visits pages")
Rel(sys_eis, sys_integration, "Sends events", "JSON/AMQP")
Rel(sys_integration, sys_resesti_svc, "Sends events", "JSON/AMQP")
Rel(sys_resesti_svc,sys_claim_api, "Makes API calls to GET/PATCH claim", "JSON/HTTP")
Rel(sys_claim_api, sys_eis, "Makes API calls", "JSON/HTTP")

Rel(sys_resesti_svc,sys_data_services, "Makes API calls to calculate predictive model", "JSON/HTTP")

SHOW_FLOATING_LEGEND()
@enduml